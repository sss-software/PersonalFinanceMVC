@model PersonalFinance.Models.Plaid
@{
    ViewBag.Title = "Home";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="row">
    <div class="col-lg-12">
        <div class="view-header">
            <div class="header-icon">
                <i class="pe page-header-icon pe-7s-cash"></i>
            </div>
            <div class="header-title">
                <h3 class="m-b-xs">Welcome Back, @Model.User.UserName.Split('@')[0]</h3>
                <small>
                    Some friendly welcome text that let's the user know they are in great hands.
                </small>
            </div>
        </div>
        <hr>
    </div>
</div>
<div class="row">
    <div class="col-md-4">
        <div class="panel">
            <div class="panel-body">
                <h1 class="m-t-md m-b-xs" style="margin-top: 30px">
                    <i class="pe pe-7s-global text-warning"> </i>
                    @String.Format("{0:C2}", Model.NetWorth.First()) <span class="slight"><i class="fa fa-play fa-rotate-90 text-warning"> </i> -0.5%</span>
                </h1>
                <div class="small">
                    <span class="c-white">Your Net Worth</span> Calculated as the net sum for all synced accounts as of <b class="text-warning">@DateTime.Today.ToShortDateString()</b>
                </div>
                <div class="m-t-sm">
                    <div class="row">
                        <div class="col-md-12">
                            <small class="c-white">
                            </small>
                            <div class="sparkline3" style="width:auto"></div>
                            <small class="slight">
                            </small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-8">
        <div class="panel panel-filled">
            <div class="row">
                <div class="col-md-4">
                    <div class="panel-body h-200 list">
                        <div class="stats-title pull-left">
                            <h4>Goal Success</h4>
                        </div>
                        <div class="m-t-xl">
                            <small>
                                <span class="c-white">Great Job!</span> You're right on track with your yearly goal.
                            </small>
                        </div>

                        <div class="progress m-t-xs full progress-small">
                            <div style="width: 35%" aria-valuemax="100" aria-valuemin="0" aria-valuenow="35" role="progressbar" class=" progress-bar progress-bar-warning">
                                <span class="sr-only">35% Complete (success)</span>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <small class="stat-label">Amount Saved</small>
                                <h4 class="m-t-xs">$ 250.30 </h4>
                            </div>
                            <div class="col-md-6">
                                <small class="stat-label">% To Target</small>
                                <h4 class="m-t-xs">35 % <i class="fa fa-level-up c-white"></i></h4>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-8">
                    <div class="panel-body">
                        @if (Model.Transaction_list is null || Model.Transaction_list.Count == 0)
                        {
                        }
                        else
                        {
                            <canvas id="singleBar" height="125"></canvas>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <div id="reportrange" class="btn btn-accent col-sm-3">
            <i class="glyphicon glyphicon-calendar fa fa-calendar"></i>
            <span> @Model.Start_date - @Model.End_date <b class="caret"></b></span>
        </div>
        <div class="dropdown col-sm-2">
            <button class="btn btn-accent dropdown-toggle" type="button" id="AccountDropDown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                @Model.SelectedAccount
                <span class="caret"></span>
            </button>
            <ul class="dropdown-menu" style="width:auto">
                @if (!Model.SelectedAccount.Equals("All Accounts"))
                {
                    <li data-placement="left" title="All Accounts"><a href='@Url.Action("AccountViewHandler", "Dashboard", new { trim = "" } )'>All Accounts</a></li>
                    <li role="separator" class="divider"></li>
                }
                @foreach (var accounttype in Model.AccountTypeList)
                {
                    <li class="dropdown-header text-capitalize">@accounttype.ToString()</li>

                    foreach (var account in Model.Account_list)
                    {
                        if (account.Account_Type.Equals(accounttype.ToString()))
                        {
                            <li data-toggle="tooltip" data-placement="left" title="@account.Institution_name"><a href='@Url.Action("AccountViewHandler", "Dashboard", new { trim = account.AccountID })'>@account.AccountName: <b> $@account.Balance</b></a></li>
                        }
                    }
                    <li role="separator" class="divider"></li>
                }
            </ul>
        </div>
    </div>

</div>
<br />
@if (Model.Transaction_list is null || Model.Transaction_list.Count == 0)
{
    <div class="row">
        <div class="col-md-8">
            <div class="panel">
                <div class="panel-body">
                    <h3>No Data Available For The Selected Timeframe!</h3>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="row">
        <div class="col-lg-8">
            <div class="panel">
                <div class="panel-body table-responsive">
                    <table id="myDataTable" class="table table-condensed table-striped container-fluid">
                        <thead>
                            <tr>
                                <th>Date</th>
                                <th>Category</th>
                                <th>Description</th>
                                <th>Location</th>
                                <th>Amount</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="panel panel-filled m-t-sm">
                <div class="panel-body text-center p-m">
                    <h4 class="font-light">
                        Total Transactions For This Period: <b>$@Model.SumTransactions</b>
                    </h4>
                    <small>Summary of your transactions by category.</small>
                    <br />
                    <canvas id="doughnutChart" height="250"></canvas>
                </div>
            </div>
        </div>
    </div>
}

<!--Date Picker Scripts-->
<script type="text/javascript">
        $(function () {

            var start = @Model.Start_date;
            var end = @Model.End_date;

            $('#reportrange').daterangepicker({

                startDate: start,
                endDate: end,

                ranges: {
                    'Today': [moment(), moment()],
                    'Week To Date': [moment().subtract(6, 'days'), moment()],
                    'Month To Date': [moment().startOf('month'), moment()],
                    'Year To Date': [moment().startOf('year'), moment()],
                    'One Year': [moment().subtract(12, 'month'), moment()]
                }

            });

            $('#reportrange').on('apply.daterangepicker', function (ev, picker) {

                 $.post('@Url.Action("DatePickerHandler", "Dashboard")', {
                    dates: { start_date: picker.startDate.format("MM/DD/YYYY"), end_date: picker.endDate.format("MM/DD/YYYY") }
                }, function () {
                    window.location.reload(true);
                });
            });
        });
</script>

<!--DataTable Scripts-->
<script>
        $(document).ready(function () {

    $('#myDataTable').dataTable({
        "bServerSide": true,
        "sAjaxSource": '@Url.Action("DataTableHandler", "Dashboard")',
        "bProcessing": true,
        "searching": false,
        "ordering": true,
        "pagingType": "full",
        "aoColumns": [
                        { "sName": "Date" },
                        { "sName": "Category" },
                        { "sName": "Description" },
                        { "sName": "Location" },
                        { "sName": "Amount" }
                    ]
    });
});
</script>

<!--Chart Scripts-->
<script>
        $(document).ready(function () {


            // Sparkline charts
            var sparklineCharts = function () {

                $(".sparkline3").sparkline([-8, 2, 4, 3, 5, 4, 3, 5, 5, 6, 3, 9, 7, 3, 5, 6, 9, 5, 6, 7, 2, 3, 9, 6, 6, 7, 8, 10, 15, 16, 17, 15], {

                    type: 'line',
                    lineColor: '#fff',
                    lineWidth: 3,
                    fillColor: '#393D47',
                    height: 70,
                    width: '100%'
                });
            };

            var sparkResize;

            // Resize sparkline charts on window resize
            $(window).resize(function () {
                clearTimeout(sparkResize);
                sparkResize = setTimeout(sparklineCharts, 100);
            });

            // Run sparkline
            sparklineCharts();


            // Charts.js data and options
            var data = @Html.Raw(Json.Encode(Session["BarChart"]));

            var dates = $.map(data, function (el) { return el.date });
            var amounts = $.map(data, function (el) { return el.amount });

            var globalOptions = {
                responsive: true,
                legend: {
                    labels: {
                        fontColor: "#90969D"
                    },
                    display: false
                },
                scales: {
                    xAxes: [{
                        display: true,
                        ticks: {
                            fontColor: "#90969D"
                        },
                        gridLines: {
                            color: "#37393F"
                        }
                    }],
                    yAxes: [{
                        ticks: {
                            fontColor: "#90969D"
                        },
                        gridLines: {
                            color: "#37393F"
                        }
                    }]
                }
            };

            var donutOptions = {
                responsive: true,
                legend: {
                    labels: {
                        fontColor: "#90969D"
                    },
                    display: false
                },
                scales: {
                    xAxes: [{
                        display: false,
                        ticks: {
                            fontColor: "#90969D"
                        },
                        gridLines: {
                            color: "#37393F"
                        }
                    }],
                    yAxes: [{
                        display: false,
                        ticks: {
                            fontColor: "#90969D"
                        },
                        gridLines: {
                            color: "#37393F"
                        }
                    }]
                }
            };


            var singleBarData = {
                labels: dates,
                datasets: [
                    {
                        label: 'Net Transactions',
                        backgroundColor: 'transparent',
                        borderColor: "#f6a821",
                        borderWidth: 1,
                        data: amounts
                    }
                ]
            };

            var c4 = document.getElementById("singleBar").getContext("2d");
            new Chart(c4, { type: 'bar', data: singleBarData, options: globalOptions });

            var doughnut = @Html.Raw(Json.Encode(Session["DonutChart"]));

            var categories = $.map(doughnut, function (el) { return el.label });
            var values = $.map(doughnut, function (el) { return el.value });

            var doughnutData = {
                labels: categories,
                datasets: [
                    {
                        data: values,
                        borderWidth: 0,
                        backgroundColor: [
                            "rgba(246,168,33, 0.8)",
                            "rgba(246,168,33, 0.4)",
                            "rgba(246,168,33, 0.1)",
                            "rgba(246,168,33, 0.6)",
                            "rgba(246,168,33, 0.3)",
                            "rgba(246,168,33, 0.2)",
                            "rgba(246,168,33, 0.8)",
                            "rgba(246,168,33, 0.4)",
                            "rgba(246,168,33, 0.1)",
                            "rgba(246,168,33, 0.6)",
                            "rgba(246,168,33, 0.3)",
                            "rgba(246,168,33, 0.2)",
                            "rgba(246,168,33, 0.8)",
                            "rgba(246,168,33, 0.4)",
                            "rgba(246,168,33, 0.1)",
                            "rgba(246,168,33, 0.6)",
                            "rgba(246,168,33, 0.3)",
                            "rgba(246,168,33, 0.2)",
                            "rgba(246,168,33, 0.8)",
                            "rgba(246,168,33, 0.4)",
                            "rgba(246,168,33, 0.1)",
                            "rgba(246,168,33, 0.6)",
                            "rgba(246,168,33, 0.3)",
                            "rgba(246,168,33, 0.2)",
                            "rgba(246,168,33, 0.8)",
                            "rgba(246,168,33, 0.4)",
                            "rgba(246,168,33, 0.1)",
                            "rgba(246,168,33, 0.6)",
                            "rgba(246,168,33, 0.3)",
                            "rgba(246,168,33, 0.2)",
                            "rgba(246,168,33, 0.8)",
                            "rgba(246,168,33, 0.4)",
                            "rgba(246,168,33, 0.1)",
                            "rgba(246,168,33, 0.6)",
                            "rgba(246,168,33, 0.3)",
                            "rgba(246,168,33, 0.2)",
                            "rgba(246,168,33, 0.8)",
                            "rgba(246,168,33, 0.4)",
                            "rgba(246,168,33, 0.1)",
                            "rgba(246,168,33, 0.6)",
                            "rgba(246,168,33, 0.3)",
                            "rgba(246,168,33, 0.2)",
                            "rgba(246,168,33, 0.8)",
                            "rgba(246,168,33, 0.4)",
                            "rgba(246,168,33, 0.1)",
                            "rgba(246,168,33, 0.6)",
                            "rgba(246,168,33, 0.3)",
                            "rgba(246,168,33, 0.2)"

                        ],
                        hoverBackgroundColor: [
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266"
                        ]
                    }]
            };

            var c6 = document.getElementById("doughnutChart").getContext("2d");
            new Chart(c6, { type: 'doughnut', data: doughnutData, options: donutOptions });

        });
</script>
