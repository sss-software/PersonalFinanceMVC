@model PersonalFinance.Models.Plaid
@{
    ViewBag.Title = "Account Sync";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="row">
    <div class="col-lg-12">
        <div class="view-header">

            <div class="header-icon">
                <i class="pe page-header-icon pe-7s-piggy"></i>
            </div>
            <div class="header-title">
                @if (!Model.Has_accounts)
                {
                    <h3>Sync Up Your Accounts!</h3>
                }
                else
                {
                    <h3>Synced Accounts</h3>
                }
                <small>
                    N'SYNC reference would make this page
                </small>
            </div>
        </div>
        <hr />
    </div>
</div>

@if (Model.Has_accounts)
{
    <row>
        @foreach (var accounttype in Model.AccountTypeList)
        {
            <div class="panel col-sm-4">
                <div class="animated slideInUp">
                    <ul class="media-list">
                        <li class="media">
                            <div class="media-body">

                                @if (accounttype.ToString().Equals("credit"))
                                {<b class="media-heading h3 text-warning text-capitalize container-center"><span class="h3"><i class="fa fa-credit-card-alt text-warning"></i></span> @accounttype.ToString()</b>
                                <div class="panel-tools"><a class="panel-toggle"><i class="fa fa-chevron-up"></i></a></div> }
                                else if (accounttype.ToString().Equals("depository"))
                                {<b class="media-heading h3 text-warning text-capitalize container-center"><span class="h3"><i class="fa fa-money text-warning"></i></span> Cash</b>
                                <div class="panel-tools"><a class="panel-toggle"><i class="fa fa-chevron-up"></i></a></div> }
                                else if (accounttype.ToString().Equals("brokerage"))
                                {<b class="media-heading h3 text-warning text-capitalize container-center"><span class="h3"><i class="fa fa-line-chart text-warning"></i></span> @accounttype.ToString()</b>
                                <div class="panel-tools"><a class="panel-toggle"><i class="fa fa-chevron-up"></i></a></div> }
                                else if (accounttype.ToString().Equals("loan"))
                                {<b class="media-heading h3 text-warning text-capitalize container-center"><span class="h3"><i class="fa fa-bank text-warning"></i></span> @accounttype.ToString()</b>
                                <div class="panel-tools"><a class="panel-toggle"><i class="fa fa-chevron-up"></i></a></div> }
                                else if (accounttype.ToString().Equals("mortgage"))
                                {<b class="media-heading h3 text-warning text-capitalize container-center"><span class="h3"><i class="fa fa-home text-warning"></i></span> @accounttype.ToString()</b>
                                <div class="panel-tools"><a class="panel-toggle"><i class="fa fa-chevron-up"></i></a></div> }
                                else
                                {<b class="media-heading h3 text-warning text-capitalize container-center"><span class="h3"><i class="fa fa-balance-scale text-warning"></i></span> @accounttype.ToString()</b>
                                <div class="panel-tools"><a class="panel-toggle"><i class="fa fa-chevron-up"></i></a></div> }

                                <div class="panel-body">
                                    @foreach (var account in Model.Account_list)
                                    {
                                        if (account.Account_Type.Equals(accounttype.ToString()))
                                        {
                                            <div class="panel panel-filled panel-c-success">
                                                <ul class="media-list">
                                                    <li class="media panel-body">
                                                        <div class="media-heading">
                                                            <text class="text-warning">@account.Institution_name.ToString()</text>
                                                            @*<button class="pull-right btn btn-sm btn-danger" type="button" onclick="location.href='@Url.Action("DeleteAccount", "Account", new { slct = account.Access_Token } )'"><i class="fa fa-trash-o"></i></button>*@
                                                        </div>
                                                        <div class="media-heading">
                                                            <row>
                                                                @if (@account.AccountName.Length > 20)
                                                                {<p class="c-white"> @account.AccountName.ToString().Substring(0, 20)...<text class="pull-right text-success">$@account.Balance</text></p> }
                                                                else
                                                                {<p class="c-white"> @account.AccountName.ToString()<text class="pull-right text-success">$@account.Balance</text></p> }
                                                            </row>
                                                        </div>
                                                        @*<button class="pull-right btn btn-danger" type="button" data-toggle="modal" data- data-target="#myModal"><i class="fa fa-trash-o"></i></button>*@
                                                    </li>
                                                </ul>
                                            </div>
                                        }
                                    }
                                </div>
                            </div>
                        </li>
                    </ul>

                </div>
            </div>
        }
    </row>
    <row>
        <div class="col-sm-3">
            <button class="btn btn-accent pull-left" id="link-button" type="button">Add Another Account</button>
            <a href="@Url.Action("Main", "Dashboard")" role="button" class="btn btn-primary pull-right">All Set</a>
        </div>
    </row>
}

else
{
    <h4>You have no accounts synced!</h4>
    <small> Click the button below to get started. </small>
    <br />
    <br />
        <button class="btn btn-primary btn-block" id="link-button" type="button">Add An Account</button>
}
<!--Modal HTML for confirmation pop up for account deletion
    Need to figure out how to pass the token for the account to jQuery on
    first button click and send same token to controller on confirmation button click
-->
<content class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-hidden="true" style="display: none;">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-body text-center">
                <h4 class="m-t-none">Hold Up!</h4>
                <p>Deleting an account will <b>permanently delete all of the accounts with this instituion</b> including all transactions!</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="pull-left btn btn-primary" data-dismiss="modal">I Changed My Mind!</button>
                <button type="button" class="pull-right btn btn-danger" id="" onclick="href='@Url.Action("DeleteAccount", "Account", new { access_token = "" } )'">Delete Away</button>
            </div>
        </div>
    </div>
</content>






<script src="https://cdn.plaid.com/link/v2/stable/link-initialize.js"></script>
<script type="text/javascript">
        var handler = Plaid.create({
            clientName: 'Plaid Walkthrough Demo',
            env: 'development',
            key: 'f326b59ea06cf5309ebd2861388d13', // Replace with your public_key to test with live credentials
            product: ['transactions'],
            webhook: 'https://dhwebhookentry.azurewebsites.net/api/PlaidWebHook?code=t6wJsM/S4m1Sg1H4SutHgArWcPSNSSTEqu6rbSWiaY6rCPSLDynamw==',
            onSuccess: function (public_token, metadata) {
                // Send the public_token to your app server.
                // The metadata object contains info about the institution the
                // user selected and the account ID, if `selectAccount` is enabled.
                $.post('@Url.Action("AccountSync","Account")', {
                    data: { public_token: public_token, name: metadata.institution.name}
                }, function () {
                    window.location.reload(true);
                });
            },
            onExit: function (err, metadata) {
                //User exited pop up
                if (err != null) {
                    // The user encountered a Plaid API error prior to exiting.
                }
                // metadata contains information about the institution
                // that the user selected and the most recent API request IDs.
                // Storing this information can be helpful for support.
            }
        });

        $('#link-button').on('click', function (e) {
            handler.open();
            // Alternatively, you can have a specific institution
            // prompt for authentication. Example:
            //
            // handler.open('ins_100000');
            //
            // This will open Link with Union Bank as the institution.
        });
</script>
