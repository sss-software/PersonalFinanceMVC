@model PersonalFinance.Models.Plaid
@{
    ViewBag.Title = "Home";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container-fluid text-center">
    <div class="row">
        <div class="panel">
            <h2 class="m-t-md m-b-xs">
                What's Up, @Model.User.UserName!
            </h2>
        </div>
    </div>
</div>
<div class="row">
    <div class="panel">
        <div class="col-sm-3  text-center">
            <div class="panel panel-filled">
                <div class="panel-body">
                    <div class="stats-title">
                        <h3 class="c-white"><text class="pull-left">Monthly Budgets </text> <a href="#"><i class="pull-right fa fa-pencil text-accent"></i></a></h3>
                    </div>
                    <div class="m-t-xl">
                        <small>
                            <span class="c-white">Budget 1</span>
                        </small>
                    </div>
                    <div class="progress m-t-xs full progress-small">
                        <div style="width: 35%" aria-valuemax="100" aria-valuemin="0" aria-valuenow="35" role="progressbar" class=" progress-bar progress-bar-success">
                        </div>
                    </div>
                    <div class="col-md-6">
                        <small class="stat-label">35% To Target</small>
                    </div>
                    <div class="m-t-xl">
                        <small>
                            <span class="c-white">Budget 2</span>
                        </small>
                    </div>
                    <div class="progress m-t-xs full progress-small">
                        <div style="width: 85%" aria-valuemax="100" aria-valuemin="0" aria-valuenow="35" role="progressbar" class=" progress-bar progress-bar-danger">
                        </div>
                    </div>
                    <div class="col-md-6">
                        <small class="stat-label">85% To Target</small>
                    </div>
                    <div class="m-t-xl">
                        <small>
                            <span class="c-white">Budget 3</span>
                        </small>
                    </div>
                    <div class="progress m-t-xs full progress-small">
                        <div style="width: 0%" aria-valuemax="100" aria-valuemin="0" aria-valuenow="35" role="progressbar" class=" progress-bar progress-bar-success">
                        </div>
                    </div>
                    <div class="col-md-6">
                        <small class="stat-label">0% To Target</small>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-6 text-center">
            <div class="panel">
                <h2><i class="fa fa-2x fa-diamond text-warning"> </i></h2>
                <div class="panel panel-success">
                    <h4>
                        <text class="c-white"><text class="text-success">Assets</text> - <text class="text-danger">Liabilities</text> = <text class="c-accent">Your Net Worth</text></text>
                    </h4>
                </div>
                <h2><i class="fa fa-2x fa-arrow-down text-warning"> </i></h2>
                <div class="panel panel-success">
                    <h4>
                        <text class="c-white"><text class="text-success">@Model.Assets</text> - <text class="text-danger">@Model.Liabilities</text> = <text class="c-accent">@Model.NetWorth</text></text>
                    </h4>

                    <div class="small">
                        <span class="c-white">Your Net Worth</span> is calculated from your synced accounts as of <b class="text-warning">@DateTime.Today.ToShortDateString()</b>
                    </div>
                    </div>
                </div>
        </div>
        <div class="col-sm-3 text-center">
            <div class="panel panel-filled">
                <div class="panel-body">
                    <div class="stats-title">
                        <h3 class="c-white"><text class="pull-left">Goals </text><a href='@Url.Action("Goals", "Account")'><i class="pull-right fa fa-pencil text-accent"></i></a></h3>
                    </div>
                    <div class="m-t-xl">
                        <small>
                            <span class="c-white">Goal 1</span>
                        </small>
                    </div>
                    <div class="progress m-t-xs full progress-small">
                        <div style="width: 35%" aria-valuemax="100" aria-valuemin="0" aria-valuenow="35" role="progressbar" class=" progress-bar progress-bar-warning">
                        </div>
                    </div>
                    <div class="col-md-6">
                        <small class="stat-label">35% To Target</small>
                    </div>
                    <div class="m-t-xl">
                        <small>
                            <span class="c-white">Goal 2</span>
                        </small>
                    </div>
                    <div class="progress m-t-xs full progress-small">
                        <div style="width: 85%" aria-valuemax="100" aria-valuemin="0" aria-valuenow="35" role="progressbar" class=" progress-bar progress-bar-warning">
                        </div>
                    </div>
                    <div class="col-md-6">
                        <small class="stat-label">85% To Target</small>
                    </div>
                    <div class="m-t-xl">
                        <small>
                            <span class="c-white">Goal 3</span>
                        </small>
                    </div>
                    <div class="progress m-t-xs full progress-small">
                        <div style="width: 0%" aria-valuemax="100" aria-valuemin="0" aria-valuenow="35" role="progressbar" class=" progress-bar progress-bar-warning">
                        </div>
                    </div>
                    <div class="col-md-6">
                        <small class="stat-label">0% To Target</small>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
</div>
<div class="container-fluid">
    <div class="panel">
        <div class="row">
            <div class="panel-heading col-sm-12">
                <b class="col-sm-10 media-heading h3 c-white text-capitalize"><span class="h1"><i class="fa fa-usd text-warning"></i></span> @Model.Start_date - @Model.End_date</b><div class="h2 c-white">@String.Format("{0:C}", Model.SumTransactions)</div>
                <hr />
            </div>
            <div>
                <div class="text-center">
                    @if (Model.Transaction_list is null || Model.Transaction_list.Count == 0)
                    {
                    }
                    else
                    {
                        <small class="text-accent">The sum of your transactions by date</small>
                        <div class="chart-container" style="height:40vh">
                            <canvas id="singleBar"></canvas>
                        </div>
                    }
                </div>
            </div>

        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-6 col-md-offset-3">
        <div id="reportrange" class="btn btn-accent pull-left" style="width:auto">
            <i class="glyphicon glyphicon-calendar fa fa-calendar"></i>
            <span> @Model.Start_date - @Model.End_date <b class="caret"></b></span>
        </div>
        <div class="dropdown pull-right">
            <button class="btn btn-accent dropdown-toggle" type="button" id="AccountDropDown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                @Model.SelectedAccount
                <span class="caret"></span>
            </button>
            <ul class="dropdown-menu" style="width:auto">
                @if (!Model.SelectedAccount.Equals("All Accounts"))
                {
                    <li data-placement="left" title="All Accounts"><a href='@Url.Action("Account", "Dashboard", new { xyz = "" } )'>All Accounts</a></li>
                    <li role="separator" class="divider"></li>
                }
                @foreach (var inst in Model.InstitutionList)
                {
                    <li class="dropdown-header text-capitalize">@inst.Inst_name</li>

                    foreach (var account in Model.Account_list)
                    {
                        if (account.Institution_name.Equals(inst.Inst_name))
                        {
                            if (account.AccountName.Length > 20)
                            {
                                <li data-toggle="tooltip" data-placement="left" title="@account.Institution_name"><a href='@Url.Action("Account", "Dashboard", new { xyz = account.AccountID })'>@account.AccountName.ToString().Substring(0, 20)... <em> @String.Format("{0:C}", account.Balance)</em></a></li>}
                            else
                            {
                                <li data-toggle="tooltip" data-placement="left" title="@account.Institution_name"><a href='@Url.Action("Account", "Dashboard", new { xyz = account.AccountID })'>@account.AccountName: <em class="pull-right"> @String.Format("{0:C}", account.Balance)</em></a></li>}
                        }
                    }
                    <li role="separator" class="divider"></li>
                }
            </ul>
        </div>
    </div>

</div>
<br />
@if (Model.Transaction_list is null || Model.Transaction_list.Count == 0)
{
    <div class="row">
        <div class="col-md-8">
            <div class="panel">
                <div class="panel-body">
                    <h3>No Data Available For The Selected Timeframe!</h3>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-12">
                <div class="panel">
                    <div class="table-responsive">
                        <table id="myDataTable" class="table table-condensed table-striped container-center">
                            <thead>
                                <tr>
                                    <th>Date</th>
                                    <th>Category</th>
                                    <th>Description</th>
                                    <th>Location</th>
                                    <th>Amount</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class="panel">
            <div class="row">
                <div class="panel-heading col-sm-6 col-sm-offset-3">
                    <b class="media-heading h3 c-white text-capitalize"><span class="h1"><i class="fa fa-pie-chart text-warning"></i></span> Categories</b>
                    <hr />
                    <small class="text-accent text-center">The sum of your transactions by category</small>
                </div>
                <div class="panel-body">
                    <div class="chart-container" style="height:50vh">
                        <canvas id="doughnutChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<!--Date Picker Scripts-->
<script type="text/javascript">
        $(function () {

            var start = @Model.Start_date;
            var end = @Model.End_date;

            $('#reportrange').daterangepicker({

                startDate: start,
                endDate: end,

                ranges: {
                    'Today': [moment(), moment()],
                    'Week To Date': [moment().subtract(6, 'days'), moment()],
                    'Month To Date': [moment().startOf('month'), moment()],
                    'Year To Date': [moment().startOf('year'), moment()],
                    'One Year': [moment().subtract(12, 'month'), moment()]
                }

            });

            $('#reportrange').on('apply.daterangepicker', function (ev, picker) {

                 $.post('@Url.Action("DatePickerHandler", "Dashboard")', {
                    dates: { start_date: picker.startDate.format("MM/DD/YYYY"), end_date: picker.endDate.format("MM/DD/YYYY") }
                }, function () {
                    window.location.reload(true);
                });
            });
        });
</script>

<!--DataTable Scripts-->
<script>
        $(document).ready(function () {

    $('#myDataTable').dataTable({
        "bServerSide": true,
        "sAjaxSource": '@Url.Action("DataTableHandler", "Dashboard")',
        "bProcessing": true,
        "searching": false,
        "ordering": true,
        "pagingType": "full",
        "aoColumns": [
                        { "sName": "Date" },
                        { "sName": "Category" },
                        { "sName": "Description" },
                        { "sName": "Location" },
                        { "sName": "Amount" }
                    ]
    });
});
</script>

<!--Chart Scripts-->
<script>
        $(document).ready(function () {


            // Sparkline charts
            var sparklineCharts = function () {

                $(".sparkline3").sparkline([-8, 2, 4, 3, 5, 4, 3, 5, 5, 6, 3, 9, 7, 3, 5, 6, 9, 5, 6, 7, 2, 3, 9, 6, 6, 7, 8, 10, 15, 16, 17, 15], {

                    type: 'line',
                    lineColor: '#fff',
                    lineWidth: 3,
                    fillColor: '#393D47',
                    height: 70,
                    width: '100%'
                });
            };

            var sparkResize;

            // Resize sparkline charts on window resize
            $(window).resize(function () {
                clearTimeout(sparkResize);
                sparkResize = setTimeout(sparklineCharts, 100);
            });

            // Run sparkline
            sparklineCharts();


            // Charts.js data and options
            var data = @Html.Raw(Json.Encode(Session["BarChart"]));

            var dates = $.map(data, function (el) { return el.date });
            var amounts = $.map(data, function (el) { return el.amount });

            var globalOptions = {
                maintainAspectRatio: false,
                responsive: true,
                legend: {
                    labels: {
                        fontColor: "#90969D"
                    },
                    display: false
                },
                scales: {
                    xAxes: [{
                        display: true,
                        ticks: {
                            fontColor: "#ffff"
                        },
                        gridLines: {
                            color: "#37393F"
                        }
                    }],
                    yAxes: [{
                        ticks: {
                            fontColor: "#ffff"
                        },
                        gridLines: {
                            color: "#37393F"
                        }
                    }]
                }
            };

            var donutOptions = {
                maintainAspectRatio: false,
                responsive: true,
                legend: {
                    labels: {
                        fontColor: "#90969D"
                    },
                    display: false
                },
                scales: {
                    xAxes: [{
                        display: false,
                        ticks: {
                            fontColor: "#90969D"
                        },
                        gridLines: {
                            color: "#37393F"
                        }
                    }],
                    yAxes: [{
                        display: false,
                        ticks: {
                            fontColor: "#90969D"
                        },
                        gridLines: {
                            color: "#37393F"
                        }
                    }]
                }
            };


            var singleBarData = {
                labels: dates,
                datasets: [
                    {
                        label: 'Total Spent',
                        backgroundColor: 'transparent',
                        borderColor: "#f6a821",
                        borderWidth: 1,
                        data: amounts
                    }
                ]
            };

            var c4 = document.getElementById("singleBar").getContext("2d");
            new Chart(c4, { type: 'bar', data: singleBarData, options: globalOptions });

            var doughnut = @Html.Raw(Json.Encode(Session["DonutChart"]));

            var categories = $.map(doughnut, function (category) { return category.label });
            var values = $.map(doughnut, function (val) { return val.value });

            var doughnutData = {
                labels: categories,
                datasets: [
                    {
                        data: values,
                        borderWidth: 0,
                        backgroundColor: [
                            "rgba(246,168,33, 0.8)",
                            "rgba(246,168,33, 0.4)",
                            "rgba(246,168,33, 0.1)",
                            "rgba(246,168,33, 0.6)",
                            "rgba(246,168,33, 0.3)",
                            "rgba(246,168,33, 0.2)",
                            "rgba(246,168,33, 0.8)",
                            "rgba(246,168,33, 0.4)",
                            "rgba(246,168,33, 0.1)",
                            "rgba(246,168,33, 0.6)",
                            "rgba(246,168,33, 0.3)",
                            "rgba(246,168,33, 0.2)",
                            "rgba(246,168,33, 0.8)",
                            "rgba(246,168,33, 0.4)",
                            "rgba(246,168,33, 0.1)",
                            "rgba(246,168,33, 0.6)",
                            "rgba(246,168,33, 0.3)",
                            "rgba(246,168,33, 0.2)",
                            "rgba(246,168,33, 0.8)",
                            "rgba(246,168,33, 0.4)",
                            "rgba(246,168,33, 0.1)",
                            "rgba(246,168,33, 0.6)",
                            "rgba(246,168,33, 0.3)",
                            "rgba(246,168,33, 0.2)",
                            "rgba(246,168,33, 0.8)",
                            "rgba(246,168,33, 0.4)",
                            "rgba(246,168,33, 0.1)",
                            "rgba(246,168,33, 0.6)",
                            "rgba(246,168,33, 0.3)",
                            "rgba(246,168,33, 0.2)",
                            "rgba(246,168,33, 0.8)",
                            "rgba(246,168,33, 0.4)",
                            "rgba(246,168,33, 0.1)",
                            "rgba(246,168,33, 0.6)",
                            "rgba(246,168,33, 0.3)",
                            "rgba(246,168,33, 0.2)",
                            "rgba(246,168,33, 0.8)",
                            "rgba(246,168,33, 0.4)",
                            "rgba(246,168,33, 0.1)",
                            "rgba(246,168,33, 0.6)",
                            "rgba(246,168,33, 0.3)",
                            "rgba(246,168,33, 0.2)",
                            "rgba(246,168,33, 0.8)",
                            "rgba(246,168,33, 0.4)",
                            "rgba(246,168,33, 0.1)",
                            "rgba(246,168,33, 0.6)",
                            "rgba(246,168,33, 0.3)",
                            "rgba(246,168,33, 0.2)"

                        ],
                        hoverBackgroundColor: [
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266",
                            "#F6C266"
                        ]
                    }]
            };

            var c6 = document.getElementById("doughnutChart").getContext("2d");
            new Chart(c6, { type: 'doughnut', data: doughnutData, options: donutOptions });

        });
</script>
